{"version":3,"sources":["reducers/MainReducer.js","components/Nav/Nav.jsx","components/Nav/index.js","components/Header/Header.jsx","components/Header/index.js","components/Background/Background.jsx","components/Background/index.js","api.js","actions/setCharactersAction.js","components/Character/index.js","components/Character/Character.jsx","components/Spinner/index.js","components/Spinner/Spinner.jsx","components/Paginator/Paginator.jsx","components/Paginator/index.js","components/CharactersList/CharactersList.jsx","components/CharactersList/index.js","components/CharacterPage/index.js","components/CharacterPage/CharacterPage.jsx","actions/setEpisodesAction.js","components/Episode/index.js","components/Episode/Episode.jsx","components/EpisodesList/EpisodesList.jsx","components/EpisodesList/index.js","components/EpisodePage/index.js","components/EpisodePage/EpisodePage.jsx","actions/setLocationsAction.js","components/Location/index.js","components/Location/Location.jsx","components/LocationsList/LocationsList.jsx","components/LocationsList/index.js","components/LocationPage/index.js","components/LocationPage/LocationPage.jsx","components/Footer/Footer.jsx","components/Footer/index.js","components/App/index.js","components/App/App.jsx","index.js"],"names":["initialState","characters","list","paginator","prevPageUrl","nextPageUrl","currentPage","pageCount","locations","episodes","store","createStore","state","action","type","payload","applyMiddleware","thunk","links","path","title","Nav","className","map","link","key","to","activeClassName","Header","Background","baseURL","instance","axios","create","getCharactersInfoByPage","page","a","get","response","data","getCharacter","id","getLocationsInfoByPage","getLocation","getEpisodesInfoByPage","getEpisode","getEpisodeName","url","defaults","name","setCharactersThunk","pageUrl","dispatch","pageNumber","arr","split","Number","length","api","results","Promise","all","character","episode","episodeName","firstEpisodeName","info","prev","next","pages","Character","statusCircleClass","status","src","image","alt","species","location","Spinner","Paginator","onNextPage","onPrevPage","disabled","onClick","CharactersList","useDispatch","useSelector","React","useEffect","CharacterPage","useParams","useState","setCharacter","gender","href","origin","created","setEpisodesThunk","Episode","EpisodesList","EpisodePage","setEpisode","air_date","setLocationsThunk","Location","LocationsList","LocationPage","setLocation","dimension","Footer","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc123d93.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst initialState = {\n  characters: {\n    list: [],\n    paginator: {\n      prevPageUrl: null,\n      nextPageUrl: null,\n      currentPage: null,\n      pageCount: null,\n    },\n  },\n  locations: {\n    list: [],\n    paginator: {\n      prevPageUrl: null,\n      nextPageUrl: null,\n      currentPage: null,\n      pageCount: null,\n    },\n  },\n  episodes: {\n    list: [],\n    paginator: {\n      prevPageUrl: null,\n      nextPageUrl: null,\n      currentPage: null,\n      pageCount: null,\n    },\n  },\n};\n\nfunction MainReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_CHARACTERS\":\n      return {\n        ...state,\n        characters: {\n          list: action.payload.characters,\n          paginator: action.payload.paginator,\n        },\n      };\n    case \"SET_LOCATIONS\":\n      return {\n        ...state,\n        locations: {\n          list: action.payload.locations,\n          paginator: action.payload.paginator,\n        },\n      };\n    case \"SET_EPISODES\":\n      return {\n        ...state,\n        episodes: {\n          list: action.payload.episodes,\n          paginator: action.payload.paginator,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(MainReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Nav.css';\r\n\r\nconst links = [\r\n  {\r\n    path: '/rmdb/characters',\r\n    title: 'Characters',\r\n  },\r\n  {\r\n    path: '/rmdb/episodes',\r\n    title: 'Episodes',\r\n  },\r\n  {\r\n    path: '/rmdb/locations',\r\n    title: 'Locations',\r\n  }\r\n];\r\n\r\nfunction Nav () {\r\n  return(\r\n    <div className=\"navigation\">\r\n      {links.map((link) => (\r\n        <NavLink\r\n          key={link.path}\r\n          to={link.path}\r\n          className=\"navigation__link\"\r\n          activeClassName=\"navigation__link_active\"\r\n        >\r\n          {link.title}\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;","import Nav from './Nav';\n\nexport default Nav;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Nav from \"../Nav\";\r\n\r\nimport './Header.css';\r\n\r\nfunction Header () {\r\n  return (\r\n    <div className=\"header\">\r\n      <Link className=\"header__link\" to=\"/rmdb/\">\r\n        Rick & Morty DB\r\n      </Link>\r\n      <Nav />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Header from './Header';\n\nexport default Header;","import React from \"react\";\n\nimport './Background.css';\n\nfunction Background () {\n  return (\n    <div className=\"background\">\n      <h1>“I turned myself into a pickle, Morty! I’m Pickle Ri-i-i-ick!”</h1>\n    </div>\n  );\n}\n\nexport default Background;\n","import Background from './Background';\n\nexport default Background;","import axios from \"axios\";\n\nconst baseURL = \"https://rickandmortyapi.com/api/\";\n\nclass Api {\n  instance = axios.create({ baseURL });\n\n  getCharactersInfoByPage = async (page) => {\n    const response = await this.instance.get(`character/?page=${page}`);\n    return response.data;\n  };\n\n  getCharacter = async (id) => {\n    const response = await this.instance.get(`character/${id}`);\n    return response.data;\n  };\n\n  getLocationsInfoByPage = async (page) => {\n    const response = await this.instance.get(`location/?page=${page}`);\n    return response.data;\n  };\n\n  getLocation = async (id) => {\n    const response = await this.instance.get(`location/${id}`);\n    return response.data;\n  };\n\n  getEpisodesInfoByPage = async (page) => {\n    const response = await this.instance.get(`episode/?page=${page}`);\n    return response.data;\n  };\n\n  getEpisode = async (id) => {\n    const response = await this.instance.get(`episode/${id}`);\n    return response.data;\n  };\n\n  getEpisodeName = async (url) => {\n    this.instance.defaults.baseURL = \"\";\n    const response = await this.instance.get(url);\n    this.instance.defaults.baseURL = baseURL;\n    return response.data.name;\n  };\n}\n\nexport default new Api();\n","import api from \"../api\";\n\nexport function setCharactersThunk(pageUrl = null) {\n  return async (dispatch) => {\n    let pageNumber = 1;\n\n    if (pageUrl) {\n      const arr = pageUrl.split(\"=\");\n      pageNumber = Number(arr[arr.length - 1]);\n    }\n\n    const data = await api.getCharactersInfoByPage(pageNumber);\n\n    const characters = data.results;\n\n    await Promise.all(characters.map(async (character) => {\n      const episodeName = await api.getEpisodeName(character.episode[0]);\n      character.firstEpisodeName = episodeName;\n    }));\n\n    dispatch({\n      type: \"SET_CHARACTERS\",\n      payload: {\n        characters,\n        paginator: {\n          prevPageUrl: data.info.prev,\n          nextPageUrl: data.info.next,\n          pageCount: data.info.pages,\n          currentPage: pageNumber,\n        },\n      },\n    });\n  };\n};\n","import Character from './Character';\n\nexport default Character;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Character.css';\r\n\r\nexport default function Character({ character }) {\r\n  let statusCircleClass = 'statusCircle';\r\n\r\n  if (character.status === 'Alive') {\r\n    statusCircleClass += ' alive';\r\n  } else if (character.status === 'Dead') {\r\n    statusCircleClass += ' dead'\r\n  }\r\n\r\n  return (\r\n    <div className=\"character\">\r\n      <div className=\"imgBlock\">\r\n        <img src={character.image} alt={character.name}/>\r\n      </div>\r\n      <div className=\"textBlock\">\r\n        <p className=\"name\">\r\n            <Link to={`/rmdb/character/${character.id}`}>\r\n              {character.name}\r\n            </Link>\r\n        </p>\r\n          <p className=\"status\">\r\n            <span className={statusCircleClass}></span>\r\n            <span className=\"statusText\">{character.status}</span>\r\n            <span>-</span>\r\n            <span className=\"species\">{character.species}</span>\r\n          </p>\r\n        <div className=\"locationBlock\">\r\n          <p className=\"title\">Last known location:</p>\r\n          <p className=\"location\">{character.location.name}</p>\r\n        </div>\r\n        <div className=\"firstSeenBlock\">\r\n          <p className=\"title\">First seen in:</p>\r\n          <p className=\"firstEpisode\">{character.firstEpisodeName}</p>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}","import Spinner from './Spinner';\n\nexport default Spinner;","import React from \"react\";\n\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\"></div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nimport './Paginator.css';\n\nfunction Paginator({ currentPage, pageCount, onNextPage, onPrevPage }) {\n  return (\n    <div className=\"paginator\">\n      <button disabled={currentPage === 1} onClick={onPrevPage}>\n        Back\n      </button>\n      <span>{currentPage}</span>\n      <button disabled={currentPage === pageCount} onClick={onNextPage}>\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Paginator;\n","import Paginator from \"./Paginator\";\n\nexport default Paginator;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { setCharactersThunk } from \"../../actions/setCharactersAction\";\n\nimport Character from \"../Character\";\nimport Spinner from \"../Spinner\";\nimport Paginator from \"../Paginator\";\n\nimport \"./CharactersList.css\";\n\nfunction CharactersList () {\n  const dispatch = useDispatch();\n\n  const characters = useSelector(store => store.characters);\n\n  React.useEffect(() => {\n    dispatch(setCharactersThunk());\n  }, [dispatch]);\n  \n  if (!characters.list.length) {\n    return <Spinner />;\n  }\n\n  function onPrevPage() {\n    dispatch(setCharactersThunk(characters.paginator.prevPageUrl));\n  }\n\n  function onNextPage() {\n    dispatch(setCharactersThunk(characters.paginator.nextPageUrl));\n  }\n\n  return (\n    <div className=\"page\">\n      <h1 className=\"page__title\">Characters</h1>\n      <div className=\"page__content\">\n        <ul>\n          {characters.list.map((character) => (\n            <li key={character.id}>\n              <Character character={character} />\n            </li>\n          ))}\n        </ul>\n        <Paginator\n          currentPage={characters.paginator.currentPage}\n          pageCount={characters.paginator.pageCount}\n          onPrevPage={onPrevPage}\n          onNextPage={onNextPage}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default CharactersList;\n","import CharactersList from './CharactersList';\n\nexport default CharactersList;","import CharacterPage from './CharacterPage';\n\nexport default CharacterPage;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport api from \"../../api\";\n\nimport Spinner from \"../Spinner\";\n\nconst CharacterPage = () => {\n  const { id } = useParams();\n  \n  const [character, setCharacter] = useState(null);\n\n  useEffect(() =>  {\n    async function getCharacter(id) {\n      const character = await api.getCharacter(id);\n      setCharacter(character);\n    }\n\n    getCharacter(id);\n  }, [id]);\n\n  if (!character) {\n    return <Spinner />;\n  }\n\n  return(\n    <div className=\"page\">\n      <h1 className=\"page__title\">{character.name}</h1>\n      <div className=\"page__content\">\n        <div><img src={character.image} alt={character.name} /></div>\n        <div>Status: {character.status}</div>\n        <div>Species: {character.species}</div>\n        <div>Type: {character.type}</div>\n        <div>Gender: {character.gender}</div>\n        <div>Origin: <a href={character.origin.url}>{character.origin.name}</a></div>\n        <div>Created: {character.created}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default CharacterPage;","import api from \"../api\";\n\nexport function setEpisodesThunk (pageUrl = null) {\n  return async (dispatch) => {\n    let pageNumber = 1;\n\n    if (pageUrl) {\n      const arr = pageUrl.split(\"=\");\n      pageNumber = Number(arr[arr.length - 1]);\n    }\n\n    const data = await api.getEpisodesInfoByPage(pageNumber);\n\n    dispatch({\n      type: \"SET_EPISODES\",\n      payload: {\n        episodes: data.results,\n        paginator: {\n          prevPageUrl: data.info.prev,\n          nextPageUrl: data.info.next,\n          pageCount: data.info.pages,\n          currentPage: pageNumber,\n        },\n      },\n    });\n  };\n};\n","import Episode from './Episode';\n\nexport default Episode;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Episode.css';\r\n\r\nexport default function Episode({ episode }) {\r\n  return (\r\n    <div className=\"Episode\">\r\n      <Link to={`/rmdb/episode/${episode.id}`}>\r\n        {episode.name}\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { setEpisodesThunk } from \"../../actions/setEpisodesAction\";\n\nimport Episode from \"../Episode\";\nimport Spinner from \"../Spinner\";\nimport Paginator from \"../Paginator\";\n\nfunction EpisodesList () {\n  const dispatch = useDispatch();\n\n  const episodes = useSelector(store => store.episodes);\n\n  React.useEffect(() => {\n    dispatch(setEpisodesThunk());\n  }, [dispatch]);\n\n  if (!episodes.list.length) {\n    return <Spinner />;\n  }\n\n  function onNextPage() {\n    dispatch(setEpisodesThunk(episodes.paginator.nextPageUrl));\n  }\n\n  function onPrevPage() {\n    dispatch(setEpisodesThunk(episodes.paginator.prevPageUrl));\n  }\n\n  return (\n    <div className=\"page\">\n      <h1 className=\"page__title\">Episodes</h1>\n      <div className=\"page__content\">\n        <ul>\n          {episodes.list.map((episode) => (\n            <li key={episode.id}>\n              <Episode episode={episode} />\n            </li>\n          ))}\n        </ul>\n        <Paginator\n          currentPage={episodes.paginator.currentPage}\n          pageCount={episodes.paginator.pageCount}\n          onNextPage={onNextPage}\n          onPrevPage={onPrevPage}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default EpisodesList;\n","import EpisodesList from './EpisodesList';\n\nexport default EpisodesList;","import EpisodePage from './EpisodePage';\n\nexport default EpisodePage;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport api from '../../api';\n\nimport Spinner from \"../Spinner\";\n\nconst EpisodePage = () => {\n  const { id } = useParams();\n  \n  const [episode, setEpisode] = useState(null);\n\n  useEffect(() =>  {\n    async function getEpisode(id) {\n      const episode = await api.getEpisode(id);\n      setEpisode(episode);\n    }\n\n    getEpisode(id);\n  }, [id]);\n\n  if (!episode) {\n    return <Spinner />;\n  }\n\n  return(\n    <div className=\"page\">\n      <h1 className=\"page__title\">{episode.name}</h1>\n      <div className=\"page__content\">\n      <div>Episode number: {episode.id}</div>\n      <div>{episode.episode}</div>\n      <div>Air date: {episode.air_date}</div>\n      <div>Created: {episode.created}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default EpisodePage;","import api from \"../api\";\n\nexport function setLocationsThunk (pageUrl = null) {\n  return async (dispatch) => {\n    let pageNumber = 1;\n\n    if (pageUrl) {\n      const arr = pageUrl.split(\"=\");\n      pageNumber =  Number(arr[arr.length - 1]);\n    }\n\n    const data = await api.getLocationsInfoByPage(pageNumber);\n\n    dispatch({\n      type: \"SET_LOCATIONS\",\n      payload: {\n        locations: data.results,\n        paginator: {\n          prevPageUrl: data.info.prev,\n          nextPageUrl: data.info.next,\n          pageCount: data.info.pages,\n          currentPage: pageNumber,\n        },\n      },\n    });\n  };\n};\n","import Location from './Location';\n\nexport default Location;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Location.css';\r\n\r\nexport default function Location({ location }) {\r\n  return (\r\n    <div className=\"Location\">\r\n      <Link to={`/rmdb/location/${location.id}`}>\r\n        {location.name}\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { setLocationsThunk } from \"../../actions/setLocationsAction\";\n\nimport Location from \"../Location\";\nimport Spinner from \"../Spinner\";\nimport Paginator from \"../Paginator\";\n\nfunction LocationsList () {\n  const dispatch = useDispatch();\n\n  const locations = useSelector(store => store.locations);\n\n  React.useEffect(() => {\n    dispatch(setLocationsThunk());\n  }, [dispatch]);\n\n  if (!locations.list.length) {\n    return <Spinner />;\n  }\n\n  function onNextPage() {\n    dispatch(setLocationsThunk(locations.paginator.nextPageUrl));\n  }\n\n  function onPrevPage() {\n    dispatch(setLocationsThunk(locations.paginator.prevPageUrl));\n  }\n\n  return (\n    <>\n      <div className=\"page\">\n        <h1 className=\"page__title\">Locations</h1>\n        <div className=\"page__content\">\n          <ul>\n            {locations.list.map((location) => (\n              <li key={location.id}>\n                <Location location={location} />\n              </li>\n            ))}\n          </ul>\n          <Paginator\n            currentPage={locations.paginator.currentPage}\n            pageCount={locations.paginator.pageCount}\n            onNextPage={onNextPage}\n            onPrevPage={onPrevPage}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LocationsList;\n","import LocationsList from './LocationsList';\n\nexport default LocationsList;","import LocationPage from './LocationPage';\n\nexport default LocationPage;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport api from '../../api';\n\nimport Spinner from \"../Spinner\";\n\nconst LocationPage = () => {\n  const { id } = useParams();\n  \n  const [location, setLocation] = useState(null);\n\n  useEffect(() =>  {\n    async function getLocation(id) {\n      const location = await api.getLocation(id);\n      setLocation(location);\n    }\n\n    getLocation(id);\n  }, [id]);\n\n  if (!location) {\n    return <Spinner />;\n  }\n\n  return(\n    <div className=\"page\">\n      <h1 className=\"page__title\">{location.name}</h1>\n      <div className=\"page__content\">\n      <div>Type: {location.type}</div>\n      <div>Dimension: {location.dimension}</div>\n      <div>Created: {location.created}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default LocationPage;","import React from \"react\";\n\nimport './Footer.css';\n\nfunction Footer () {\n  return (\n    <div className=\"footer\">\n      <a className=\"footer__link\" href=\"https://github.com/jglobe/rmdb\">View on Github</a>\n    </div>\n  );\n}\n\nexport default Footer;\n","import Footer from './Footer';\n\nexport default Footer;","import App from './App';\n\nexport default App;","import React from \"react\";\r\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Header from \"../Header\";\r\nimport Background from \"../Background\";\r\nimport CharactersList from \"../CharactersList\";\r\nimport CharacterPage from \"../CharacterPage\";\r\nimport EpisodesList from \"../EpisodesList\";\r\nimport EpisodePage from \"../EpisodePage\";\r\nimport LocationsList from \"../LocationsList\";\r\nimport LocationPage from \"../LocationPage\";\r\nimport Footer from \"../Footer\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/rmdb\">\r\n          <Background />\r\n        </Route>\r\n        <Route path=\"/rmdb/characters\">\r\n          <CharactersList />\r\n        </Route>\r\n        <Route path=\"/rmdb/character/:id\">\r\n          <CharacterPage />\r\n        </Route>\r\n        <Route path=\"/rmdb/episodes\">\r\n          <EpisodesList />\r\n        </Route>\r\n        <Route path=\"/rmdb/episode/:id\">\r\n          <EpisodePage />\r\n        </Route>\r\n        <Route path=\"/rmdb/locations\">\r\n          <LocationsList />\r\n        </Route>\r\n        <Route path=\"/rmdb/location/:id\">\r\n          <LocationPage />\r\n        </Route>\r\n      </Switch>\r\n      <Footer/>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./reducers/MainReducer\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}